#version: '3.3'
#services:
#  app-server:
#    # Configuration for building the docker image for the backend service
#    build:
#      context: polling-app-server # Use an image built from the specified dockerfile in the `polling-app-server` directory.
#      dockerfile: Dockerfile
#    ports:
#      - "8080:8080" # Forward the exposed port 8080 on the container to port 8080 on the host machine
#    restart: always
#      #    depends_on:
#      - db # This service depends on mysql. Start that first.
#    environment: # Pass environment variables to the service
#      SPRING_DATASOURCE_URL: jdbc:mysql://db:3306/polls?useSSL=false&serverTimezone=UTC&useLegacyDatetimeCode=false
#      SPRING_DATASOURCE_USERNAME: fafa1
#      SPRING_DATASOURCE_PASSWORD: fafa1
#    networks: # Networks to join (Services on the same network can communicate with each other using their name)
#      - backend
#      - frontend
#
#  # Frontend Service
#  app-client:
#    build:
#      context: polling-app-client # Use an image built from the specified dockerfile in the `polling-app-client` directory.
#      dockerfile: Dockerfile
#      args:
#        REACT_APP_API_BASE_URL: http://127.0.0.1:8080/api
#    ports:
#      - "9090:80" # Map the exposed port 80 on the container to port 9090 on the host machine
#    restart: always
#    depends_on:
#      - app-server
#    networks:
#      - frontend
#
#  # Database Service (Mysql)
#  db:
#    image: mysql:5.7
#    ports:
#      - "3306:3306"
#    restart: always
#    environment:
#      MYSQL_DATABASE: climbing
#      MYSQL_USER: fafa1
#      MYSQL_PASSWORD: fafa1
#      MYSQL_ROOT_PASSWORD: root
#    volumes:
#      - ./data:/var/lib/mysql
#    networks:
#      - backend
#
#  # Volumes
#  volumes:
#    data:
#
#  # Networks to be created to facilitate communication between containers
#  networks:
#    backend:
#    frontend:
#
#  #  # Database Service (Mysql)
#  #  db:
#  #    image: mysql:5.7
#  #    restart: always
#  #    environment:
#  #      MYSQL_DATABASE: 'climbing'
#  #      # So you don't have to use root, but you can if you like
#  #      MYSQL_USER: 'fafa1'
#  #      # You can use whatever password you like
#  #      MYSQL_PASSWORD: 'fafa1'
#  #      # Password for root access
#  #      MYSQL_ROOT_PASSWORD: 'root'
#  #      # premier port sur le port sur ta machine a toi : machine en local
#  #    ports:
#  #      -
#  #      - '3307:3306'
#  #    expose:
#  #      - '3307'
#  #      # le dossier data de ma machine en local est en lien symbolique dans var lisb mysql en distant
#  #    volumes:
#  #      - ./data:/var/lib/mysql
#
#  vue-client:
#    build:
#      context: ./vuejs
#      dockerfile: Dockerfile
#    ports:
#      - 8081:8080
#    volumes:
#      - ./vuejs:/app
#
#  angular-client:
#    build:
#      context: ./angular
#      dockerfile: Dockerfile
#    ports:
#      - 8082:8080
#    volumes:
#      - ./angular:/app
#
#  react-client:
#    build:
#      context: ./reactjs
#      dockerfile: Dockerfile
#    ports:
#      - 3000:3000
#    volumes:
#      - ./reactjs:/aap
